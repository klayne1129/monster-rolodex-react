{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/react/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  } // after component renders first time, fetches api data and sets it to empy monster array in state\n\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    //creates a new array 'filteredMonsters' to check if searchField value matches a monster in the array\n    // now will rerender page every time state changes. which does anytime you type in search field\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"search monsters\",\n      name: \"searchField\",\n      value: this.state.searchField,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/react/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","App","constructor","state","monsters","searchField","handleChange","bind","componentDidMount","fetch","then","response","json","users","setState","event","name","value","target","render","filteredMonsters","filter","monster","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,gDAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD,GARyB,CAU1B;;;AACAC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACV,MAAAA,QAAQ,EAAES;AAAX,KAAd,CAFf;AAGD;;AACDP,EAAAA,YAAY,CAACS,KAAD,EAAQ;AAElB,UAAM;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAeF,KAAK,CAACG,MAA3B;AACA,SAAKJ,QAAL,CAAc;AAAC,OAACE,IAAD,GAAQC;AAAT,KAAd;AAED;;AAEDE,EAAAA,MAAM,GAAG;AAEP;AACA;AACA,UAAM;AAAEf,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA2B,KAAKF,KAAtC;AACA,UAAMiB,gBAAgB,GAAGhB,QAAQ,CAACiB,MAAT,CAAgBC,OAAO,IAC5CA,OAAO,CAACN,IAAR,CAAaO,WAAb,GAA2BC,QAA3B,CAAoCnB,WAAW,CAACkB,WAAZ,EAApC,CADqB,CAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,WAAW,EAAC,iBAAjC;AAAmD,MAAA,IAAI,EAAC,aAAxD;AAAsE,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWE,WAAxF;AAAqG,MAAA,QAAQ,EAAE,KAAKC,YAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAKE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEc,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAUD;;AAxCyB;;AA2C5B,eAAenB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component.jsx'\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  // after component renders first time, fetches api data and sets it to empy monster array in state\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n  handleChange(event) {\n\n    const {name,value} = event.target\n    this.setState({[name]: value})\n   \n  }\n\n  render() {\n\n    //creates a new array 'filteredMonsters' to check if searchField value matches a monster in the array\n    // now will rerender page every time state changes. which does anytime you type in search field\n    const { monsters, searchField} = this.state\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\"> \n\n        <input type='search' placeholder='search monsters' name='searchField' value={this.state.searchField} onChange={this.handleChange}/>\n   \n        \n        <CardList monsters={filteredMonsters}>\n        </CardList>\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}