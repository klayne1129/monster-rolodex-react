{"ast":null,"code":"import _defineProperty from\"/Users/KatieLayne/Documents/react/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/KatieLayne/Documents/react/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/KatieLayne/Documents/react/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/KatieLayne/Documents/react/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/KatieLayne/Documents/react/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{CardList}from'./components/card-list/card-list.component.jsx';import'./App.css';import{SearchBox}from'./components/search-box/search-box.component.jsx';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.handleChange=function(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;_this.setState(_defineProperty({},name,value));};_this.state={monsters:[],searchField:''};// this.handleChange = this.handleChange.bind(this)\nreturn _this;}// after component renders first time, fetches api data and sets it to empy monster array in state\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('http://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({monsters:users});});}// handleChange(event) {\n//   const {name,value} = event.target\n//   this.setState({[name]: value})\n// }\n//using arrow function like so binds the method to the component \n},{key:\"render\",value:function render(){//creates a new array 'filteredMonsters' to check if searchField value matches a monster in the array\n// now will rerender page every time state changes. which does anytime you type in search field\nvar _this$state=this.state,monsters=_this$state.monsters,searchField=_this$state.searchField;var filteredMonsters=monsters.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLowerCase());});return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h1\",null,\" Monster Rolodex\"),/*#__PURE__*/React.createElement(SearchBox,{placeholder:\"search monsters\",handleChange:this.handleChange,value:searchField}),/*#__PURE__*/React.createElement(CardList,{monsters:filteredMonsters}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/react/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","handleChange","event","target","name","value","setState","state","monsters","searchField","fetch","then","response","json","users","filteredMonsters","filter","monster","toLowerCase","includes"],"mappings":"+zBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,QAAT,KAAyB,gDAAzB,CACA,MAAO,WAAP,CACA,OAASC,SAAT,KAA0B,kDAA1B,C,GAEMC,CAAAA,G,0FACJ,cAAa,qCACX,wBADW,MAuBbC,YAvBa,CAuBE,SAAAC,KAAK,CAAI,mBAEDA,KAAK,CAACC,MAFL,CAEfC,IAFe,eAEfA,IAFe,CAEVC,KAFU,eAEVA,KAFU,CAGtB,MAAKC,QAAL,oBAAgBF,IAAhB,CAAuBC,KAAvB,GAED,CA5BY,CAEX,MAAKE,KAAL,CAAa,CACXC,QAAQ,CAAE,EADC,CAEXC,WAAW,CAAE,EAFF,CAAb,CAIA;AANW,aAOZ,CAED;6EACmB,iBACjBC,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACR,QAAL,CAAc,CAACE,QAAQ,CAAEM,KAAX,CAAd,CAAJ,EAFX,EAGD,CACD;AAEA;AACA;AAEA;AAEA;uCAQS,CAEP;AACA;AAHO,gBAI0B,KAAKP,KAJ/B,CAICC,QAJD,aAICA,QAJD,CAIWC,WAJX,aAIWA,WAJX,CAKP,GAAMM,CAAAA,gBAAgB,CAAGP,QAAQ,CAACQ,MAAT,CAAgB,SAAAC,OAAO,QAC5CA,CAAAA,OAAO,CAACb,IAAR,CAAac,WAAb,GAA2BC,QAA3B,CAAoCV,WAAW,CAACS,WAAZ,EAApC,CAD4C,EAAvB,CAAzB,CAEA,mBACE,2BAAK,SAAS,CAAC,KAAf,eAEA,iDAFA,cAGE,oBAAC,SAAD,EACE,WAAW,CAAC,iBADd,CAEE,YAAY,CAAE,KAAKjB,YAFrB,CAGE,KAAK,CAAEQ,WAHT,EAHF,cAQE,oBAAC,QAAD,EAAU,QAAQ,CAAEM,gBAApB,EARF,CADF,CAaD,C,iBAnDelB,S,EAsDlB,cAAeG,CAAAA,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component.jsx'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n    // this.handleChange = this.handleChange.bind(this)\n  }\n\n  // after component renders first time, fetches api data and sets it to empy monster array in state\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n  // handleChange(event) {\n\n  //   const {name,value} = event.target\n  //   this.setState({[name]: value})\n   \n  // }\n\n  //using arrow function like so binds the method to the component \n  handleChange = event => {\n\n    const {name,value} = event.target\n    this.setState({[name]: value})\n   \n  }\n\n  render() {\n\n    //creates a new array 'filteredMonsters' to check if searchField value matches a monster in the array\n    // now will rerender page every time state changes. which does anytime you type in search field\n    const { monsters, searchField} = this.state\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\"> \n\n      <h1> Monster Rolodex</h1>\n        <SearchBox \n          placeholder='search monsters'\n          handleChange={this.handleChange}\n          value={searchField}\n        />\n        <CardList monsters={filteredMonsters}>\n        </CardList>\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}