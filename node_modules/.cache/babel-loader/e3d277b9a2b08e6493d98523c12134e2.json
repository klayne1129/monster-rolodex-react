{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/react/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }; // this.handleChange = this.handleChange.bind(this)\n  } // after component renders first time, fetches api data and sets it to empy monster array in state\n\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  } // handleChange(event) {\n  //   const {name,value} = event.target\n  //   this.setState({[name]: value})\n  // }\n\n\n  render() {\n    //creates a new array 'filteredMonsters' to check if searchField value matches a monster in the array\n    // now will rerender page every time state changes. which does anytime you type in search field\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBox, {\n      placeholder: \"search monsters\",\n      handleChange: this.handleChange,\n      value: searchField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/react/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","handleChange","event","name","value","target","setState","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","monster","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,gDAAzB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,kDAA1B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAE;AACX;;AADW,SAsBbC,YAtBa,GAsBEC,KAAK,IAAI;AAEtB,YAAM;AAACC,QAAAA,IAAD;AAAMC,QAAAA;AAAN,UAAeF,KAAK,CAACG,MAA3B;AACA,WAAKC,QAAL,CAAc;AAAC,SAACH,IAAD,GAAQC;AAAT,OAAd;AAED,KA3BY;;AAEX,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb,CAFW,CAMX;AACD,GARyB,CAU1B;;;AACAC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKT,QAAL,CAAc;AAACE,MAAAA,QAAQ,EAAEO;AAAX,KAAd,CAFf;AAGD,GAfyB,CAgB1B;AAEA;AACA;AAEA;;;AASAC,EAAAA,MAAM,GAAG;AAEP;AACA;AACA,UAAM;AAAER,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA2B,KAAKF,KAAtC;AACA,UAAMU,gBAAgB,GAAGT,QAAQ,CAACU,MAAT,CAAgBC,OAAO,IAC5CA,OAAO,CAAChB,IAAR,CAAaiB,WAAb,GAA2BC,QAA3B,CAAoCZ,WAAW,CAACW,WAAZ,EAApC,CADqB,CAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,iBADd;AAEE,MAAA,YAAY,EAAE,KAAKnB,YAFrB;AAGE,MAAA,KAAK,EAAEQ,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAOE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEQ,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAYD;;AAjDyB;;AAoD5B,eAAelB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component.jsx'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n    // this.handleChange = this.handleChange.bind(this)\n  }\n\n  // after component renders first time, fetches api data and sets it to empy monster array in state\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n  // handleChange(event) {\n\n  //   const {name,value} = event.target\n  //   this.setState({[name]: value})\n   \n  // }\n\n  handleChange = event => {\n\n    const {name,value} = event.target\n    this.setState({[name]: value})\n   \n  }\n\n  render() {\n\n    //creates a new array 'filteredMonsters' to check if searchField value matches a monster in the array\n    // now will rerender page every time state changes. which does anytime you type in search field\n    const { monsters, searchField} = this.state\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\"> \n\n        <SearchBox \n          placeholder='search monsters'\n          handleChange={this.handleChange}\n          value={searchField}\n        />\n        <CardList monsters={filteredMonsters}>\n        </CardList>\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}